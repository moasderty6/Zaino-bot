import os
import logging
from aiohttp import web
from aiogram import Bot, Dispatcher, F, types
from aiogram.enums import ParseMode
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application

# ========================
# Ø¥Ø¹Ø¯Ø§Ø¯Ø§Øª Ø§Ù„Ø¨ÙˆØª
# ========================
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN environment variable is missing!")

WEBHOOK_HOST = os.getenv("WEBHOOK_HOST")  # Ù…Ø«Ù„: https://zino-bot.onrender.com
WEBHOOK_PATH = f"/webhook/{BOT_TOKEN}"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# ========================
# Ø¥Ù†Ø´Ø§Ø¡ ÙƒØ§Ø¦Ù†Ø§Øª Ø§Ù„Ø¨ÙˆØª
# ========================
logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


# ========================
# Ø£Ø²Ø±Ø§Ø± Ø§Ù„ØªÙˆØ¬ÙŠÙ‡
# ========================
def start_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="ðŸ“¢ Ù‚Ù†Ø§Ø© Ø²ÙŠÙ†Ùˆ ÙŠØ§Ø³Ø± Ù…Ø­Ø§Ù…ÙŠØ¯ Ø§Ù„Ø±Ø³Ù…ÙŠØ©",
            url="https://t.me/zainaldinmaham1"
        )],
        [InlineKeyboardButton(
            text="ðŸ—£ Ù…Ù†ØªØ¯Ù‰ Ø´Ø¨ÙƒØ© Ø²ÙŠÙ†Ùˆ Ø§Ù„Ø¥Ø®Ø¨Ø§Ø±ÙŠØ©",
            url="https://t.me/+qaY85ZwO0HQwOGY0"
        )]
    ])


# ========================
# Ø£Ù…Ø± /start
# ========================
@dp.message(F.text == "/start")
async def start_handler(message: types.Message):
    await message.answer(
        "Ø£Ù‡Ù„Ø§Ù‹ Ø¨Ùƒ ðŸ‘‹\nØ§Ø®ØªØ± Ù…Ù† Ø§Ù„Ø£Ø²Ø±Ø§Ø± Ø£Ø¯Ù†Ø§Ù‡ Ù„Ù„Ø§Ù†Ø¶Ù…Ø§Ù…:",
        reply_markup=start_keyboard(),
        parse_mode=ParseMode.HTML
    )


# ========================
# Ø¥Ø¹Ø¯Ø§Ø¯ Webhook Ø¹Ù†Ø¯ Ø¨Ø¯Ø¡ Ø§Ù„ØªØ´ØºÙŠÙ„
# ========================
@dp.startup()
async def on_startup(bot: Bot):
    await bot.set_webhook(WEBHOOK_URL)
    logging.info(f"Webhook set to: {WEBHOOK_URL}")


# ========================
# ØªØ´ØºÙŠÙ„ ØªØ·Ø¨ÙŠÙ‚ Aiohttp
# ========================
async def main():
    app = web.Application()
    app["bot"] = bot

    SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=WEBHOOK_PATH)
    setup_application(app, dp)

    port = int(os.getenv("PORT", "8080"))
    web.run_app(app, port=port)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
